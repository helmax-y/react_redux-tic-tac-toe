{"version":3,"sources":["store/index.js","components/Square/index.js","components/Board/index.js","components/Game/index.js","index.js"],"names":["actionTypes","setWinner","winner","type","payload","getSquares","state","squares","getXIsNext","xIsNext","getWinner","initialState","Array","fill","createStore","action","map","value","index","Square","onClick","className","Board","useSelector","dispatch","useDispatch","useEffect","calculateWinner","status","handleClick","i","setSquares","lines","length","a","b","c","indexOf","keys","key","Game","ReactDOM","render","store","document","getElementById"],"mappings":"qPAIaA,EACE,aADFA,EAEC,YAFDA,EAGC,YAODC,EAAY,SAAAC,GAAM,MAAK,CAAEC,KAAMH,EAAwBI,QAASF,IAIhEG,EAAa,SAAAC,GAAK,OAAIA,EAAMC,SAC5BC,EAAa,SAAAF,GAAK,OAAIA,EAAMG,SAC5BC,EAAY,SAAAJ,GAAK,OAAIA,EAAMJ,QAElCS,EAAe,CACnBJ,QAASK,MAAM,GAAGC,KAAK,MACvBJ,SAAS,EACTP,OAAQ,MA+BKY,eA5BC,SAACR,EAAOS,GACtB,OAAQA,EAAOZ,MACb,KAAKH,EACH,OAAO,eACFM,EADL,CAEEC,QAASD,EAAMC,QAAQS,KAAI,SAACC,EAAOC,GAAR,OAAkBA,IAAUH,EAAOX,QAAUE,EAAMG,QAAU,IAAM,IAAMQ,KACpGR,SAAUH,EAAMG,UAGpB,KAAKT,EACH,OAAO,eACFM,EADL,CAEEJ,OAAQa,EAAOX,UAGnB,KAAKJ,EACH,OAAO,eACFM,EADL,CAEEC,QAASK,MAAM,GAAGC,KAAK,MACvBJ,SAAS,EACTP,OAAQ,OAGZ,QACE,OAAOI,KAIuBK,G,gBC1CrBQ,EAZA,SAAC,GAAwB,IAAtBF,EAAqB,EAArBA,MAAOG,EAAc,EAAdA,QAEvB,OACE,4BACEC,UAAU,gBACVD,QAASA,GAERH,IC6EQK,G,MA7ED,WACZ,IAAMf,EAAUgB,YAAYlB,GACtBI,EAAUc,YAAYf,GACtBN,EAASqB,YAAYb,GACrBc,EAAWC,cAEjBC,qBAAU,WACRC,EAAgBpB,KACf,CAACA,IAEJ,IA6BIqB,EA7BEC,EAAc,SAAAC,GACd5B,GAAUK,EAAQuB,IAEtBN,EFVsB,SAAAM,GAAC,MAAK,CAAE3B,KAAMH,EAAyBI,QAAS0B,GEU7DC,CAAWD,KAGhBH,EAAkB,SAAApB,GAYtB,IAXA,IAAMyB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAF,EAAI,EAAGA,EAAIE,EAAMC,OAAQH,IAAK,CAAC,IAAD,cACnBE,EAAMF,GADa,GAC9BI,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GAEpE,OADAZ,EAASvB,EAAUM,EAAQ2B,KACpB3B,EAAQ2B,GAInB,OAAO,MAaT,OAPEN,EADE1B,EACI,UAAMA,EAAN,mBAC8B,IAA3BK,EAAQ8B,QAAQ,MAChB,QAEH,sBAAkB5B,EAAU,IAAM,KAIxC,yBAAKY,UAAU,SACb,yBAAKA,UAAU,iBAAiBO,GAEhC,yBAAKP,UAAU,kBACZ,YAAIT,MAAM,GAAG0B,QAAQtB,KAAI,SAAAc,GAAC,OACzB,kBAAC,EAAD,CACES,IAAKT,EACLb,MAAOV,EAAQuB,GACfV,QAAS,kBAAMS,EAAYC,SAG/B,yBAAKT,UAAU,2CACf,yBAAKA,UAAU,2CACf,yBAAKA,UAAU,yCACf,yBAAKA,UAAU,0CAGjB,4BACEA,UAAU,eACVD,QAAS,kBAAMI,EFjES,CAAErB,KAAMH,ME+DlC,iBCvESwC,EAFF,kBAAM,kBAAC,EAAD,O,MCInBC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.99f5567a.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\n// action types\n\nexport const actionTypes = {\n  SET_SQUARES: 'setSquares',\n  SET_WINNER: 'setWinner',\n  PLAY_AGAIN: 'playAgain',\n};\n\n// action creators\n\nexport const setSquares = i => ({ type: actionTypes.SET_SQUARES, payload: i });\nexport const playAgain = () => ({ type: actionTypes.PLAY_AGAIN });\nexport const setWinner = winner => ({ type: actionTypes.SET_WINNER, payload: winner });\n\n// selectors\n\nexport const getSquares = state => state.squares;\nexport const getXIsNext = state => state.xIsNext;\nexport const getWinner = state => state.winner;\n\nconst initialState = {\n  squares: Array(9).fill(null),\n  xIsNext: true,\n  winner: null,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SQUARES:\n      return {\n        ...state,\n        squares: state.squares.map((value, index) => index === action.payload ? state.xIsNext ? 'X' : 'O' : value),\n        xIsNext: !state.xIsNext,\n      };\n\n    case actionTypes.SET_WINNER:\n      return {\n        ...state,\n        winner: action.payload,\n      };\n\n    case actionTypes.PLAY_AGAIN:\n      return {\n        ...state,\n        squares: Array(9).fill(null),\n        xIsNext: true,\n        winner: null,\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default createStore(reducer, initialState);\n","import React from 'react';\n\nconst Square = ({ value, onClick }) => {\n\n  return (\n    <button \n      className=\"board__square\"\n      onClick={onClick}\n    >\n      {value}\n    </button>\n  );\n}\n\nexport default Square;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getSquares, getXIsNext, getWinner } from '../../store';\nimport { setSquares, playAgain, setWinner } from '../../store';\n\nimport Square from '../Square';\nimport './board.scss';\n\nconst Board = () => {\n  const squares = useSelector(getSquares);\n  const xIsNext = useSelector(getXIsNext);\n  const winner = useSelector(getWinner);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    calculateWinner(squares);\n  }, [squares]);\n\n  const handleClick = i => {\n    if (winner || squares[i]) return;\n\n    dispatch(setSquares(i));\n  }\n\n  const calculateWinner = squares => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        dispatch(setWinner(squares[a]));\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  let status;\n  \n  if (winner) {\n    status = `${winner} is the winner`;\n  } else if (squares.indexOf(null) === -1) {\n    status = 'Draw!';\n  } else {\n    status = `Next player ${xIsNext ? 'X' : 'O'}`;\n  }\n\n  return (\n    <div className=\"board\">\n      <div className=\"board__status\">{status}</div>\n\n      <div className=\"board__squares\">\n        {[...Array(9).keys()].map(i => (\n          <Square \n            key={i}\n            value={squares[i]}\n            onClick={() => handleClick(i)}\n          />\n        ))}\n        <div className=\"board__line board__line--horizontal n1\"></div>\n        <div className=\"board__line board__line--horizontal n2\"></div>\n        <div className=\"board__line board__line--vertical n1\"></div>\n        <div className=\"board__line board__line--vertical n2\"></div>\n      </div>\n\n      <button \n        className=\"board__again\"\n        onClick={() => dispatch(playAgain())}\n      >\n        Play Again\n      </button>\n    </div>\n  );\n};\n\nexport default Board;","import React from 'react';\nimport Board from '../Board';\n\nconst Game = () => <Board />;\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Game from './components/Game';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Game />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}